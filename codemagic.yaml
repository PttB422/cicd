workflows:
  react-native-ios:
    name: React Native iOS
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      groups:
        - uat
      vars:
        XCODE_WORKSPACE: 'cicd.xcworkspace'
        XCODE_SCHEME: 'cicd'
        BUNDLE_ID: 'com.pttb.cicd'
      node: v16.11.1
      xcode: 13.4.1
      cocoapods: default
      ios_signing:
        distribution_type: development
        bundle_identifier: com.pttb.cicd
    scripts:
      - name: Generate .env
        script: |
          echo "APP_ENV=$APP_ENV" > ".env"
      - name: Install npm dependencies
        script: |
          npm install
      - name: Install CocoaPods dependencies
        script: |
          cd ios && pod install
      - name: Set up code signing settings on Xcode project
        script: xcode-project use-profiles
      - name: Build ipa for distribution
        script: |
          # xcode-project build-ipa \
          #   --workspace "$CM_BUILD_DIR/ios/$XCODE_WORKSPACE" \
          #   --scheme "$XCODE_SCHEME" --archive-flags="-destination 'generic/platform=iOS'"
          xcodebuild build \
            -workspace "$CM_BUILD_DIR/ios/$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -sdk iphonesimulator \
            -destination 'platform=iOS Simulator,name=iPhone 11,OS=15.5' \
            -configuration Release \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO
      # - name: Bump version
      #   script: |
      #     PROJECT_DIR=./ios/cicd
      #     INFOPLIST_FILE=Info.plist

      #     buildNumber=$(/usr/libexec/PlistBuddy -c "Print CFBundleVersion" "${PROJECT_DIR}/${INFOPLIST_FILE}")
      #     newBuildNumber=$(($buildNumber + 1))
      #     $(/usr/libexec/PlistBuddy -c "Set :CFBundleVersion $newBuildNumber" "${PROJECT_DIR}/${INFOPLIST_FILE}")

      #     VERSIONNUM=$(/usr/libexec/PlistBuddy -c "Print CFBundleShortVersionString" "${PROJECT_DIR}/${INFOPLIST_FILE}")
      #     NEWSUBVERSION=`echo $VERSIONNUM | awk -F "." '{print $3}'`
      #     NEWSUBVERSION=$(($NEWSUBVERSION + 1))
      #     NEWVERSIONSTRING=`echo $VERSIONNUM | awk -F "." '{print $1 "." $2 ".'$NEWSUBVERSION'" }'`
      #     $(/usr/libexec/PlistBuddy -c "Set :CFBundleShortVersionString $NEWVERSIONSTRING" "${PROJECT_DIR}/${INFOPLIST_FILE}")

      #     echo "buildNumber: ${buildNumber} - newBuildNumber: ${newBuildNumber}"
      #     echo "VERSIONNUM: ${VERSIONNUM} - NEWVERSIONSTRING: ${NEWVERSIONSTRING}"
      - name: Push commit
        script: |
          git remote set-url origin https://PttB422:$GIT_PW@github.com/PttB422/cicd.git
          git add .
          git commit -am "build and bump version"
          git push origin $APP_ENV
    artifacts:
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
      - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
    publishing:
      email:
        recipients:
          - phat.bui@southasiaservices.com
          - phattienbui95@gmail.com
        notify:
          success: true
          failure: true
  react-native-android:
    name: React Native Android
    max_build_duration: 120
    instance_type: mac_mini_m1
    environment:
      groups:
        - uat
      vars:
        PACKAGE_NAME: com.cicd
      node: v16.11.1
    scripts:
      - name: Generate .env
        script: |
          echo "APP_ENV=$APP_ENV" > ".env"
      - name: Install npm dependencies
        script: |
          npm install
      - name: Set Android SDK location
        script: |
          echo "sdk.dir=$ANDROID_SDK_ROOT" > "$FCI_BUILD_DIR/android/local.properties"
      # - name: Set up keystore
      #   script: |
      #         echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
      #         # The following script creates key.properties file and stores the credentials in it. As we configure code signing in app/build.gradle file, the following part is unnecessary unless code signing is configured differently as explained in the documentation: https://docs.codemagic.io/flutter-code-signing/android-code-signing/
      #         # cat >> "$CM_BUILD_DIR/android/key.properties" <<EOF
      #         # storePassword=$CM_KEYSTORE_PASSWORD
      #         # keyPassword=$CM_KEY_ALIAS_PASSWORD
      #         # keyAlias=$CM_KEY_ALIAS_USERNAME
      #         # storeFile=/tmp/keystore.keystore
      #         # EOF
      - name: Bump version
        script: |

          # get gradle property
          cd android
          versionCode=$(./gradlew -q printVersionCode | tail -1)
          versionName=$(./gradlew -q printVersionName | tail -1)

          nextVersionName=$(echo ${versionName} | awk -F. -v OFS=. '{$NF += 1 ; print}')
          nextVersionCode=$((versionCode+1))

          echo "versionCode: ${versionCode} - nextVersionCode: ${nextVersionCode}"
          echo "versionName: ${versionName} - nextVersionName: ${nextVersionName}"

          cd ..
          ANDROID_BUILD_GRADLE=./android/app/build.gradle

          echo "[LOG] version code:" $versionCode
          echo "[LOG] version name:" $versionName
          echo "[LOG] Updating version code to $nextVersionCode in build.gradle file"
          echo "[LOG] Updating version name to $nextVersionName in build.gradle file"

          sed -i '' 's/versionCode [0-9a-zA-Z -_]*/versionCode '$(($nextVersionCode))'/' $ANDROID_BUILD_GRADLE
          sed -i '' 's/versionName [0-9a-zA-Z -_]*/versionName "'$nextVersionName'"/' $ANDROID_BUILD_GRADLE

      - name: Build Android release
        script: |
          # Set environment variable so it can be used to increment build number in android/app/build.gradle
          # Note that tracks can be specified when retrieving latest build number from Google Play, for example:
          # export NEW_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks=alpha) + 1))
          # export LATEST_GOOGLE_PLAY_BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME") + 1))
          cd android && ./gradlew assembleRelease
      - name: Push commit
        script: |
          git remote set-url origin https://PttB422:$GIT_PW@github.com/PttB422/cicd.git
          git add .
          git commit -am "build and bump version"
          git push origin $APP_ENV
    artifacts:
      - android/app/build/outputs/**/*.aab
      - android/app/build/outputs/**/*.apk
    publishing:
      email:
        recipients:
          - phat.bui@southasiaservices.com
          - phattienbui95@gmail.com
        notify:
          success: true
          failure: true
